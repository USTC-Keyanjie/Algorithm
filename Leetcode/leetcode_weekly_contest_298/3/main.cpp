#include <bits/stdc++.h>

using namespace std;

class Solution {
public:
    int longestSubsequence(string s, int k) {
        int len = 0;

        if (s.length() == 0) {
            s = "0";
        }
        int tk = k;
        while (tk) {
            tk /= 2;
            len++;
        }
        if (s.length() < len) {
            return s.length();
        }

        int v = 0;

        int total_len = s.length();
        string init_str = s.substr(total_len - len, len);

        for (char & sub_it : init_str) {
            v *= 2;
            v += (sub_it - '0');
        }

        int i = total_len - len - 1;
        for (; i >= 0 && v > k;) {
            v -= (s[i + len] - '0');
            v /= 2;
            v += (s[i] - '0') * (1 << (len - 1));
            --i;
        }

        if (i < 0)
            return len - 1;
        else {
            string left_str = s.substr(0, i + 1);
            int cnt = std::count(left_str.begin(), left_str.end(), '0');
            return cnt + len;
        }
    }
};

int main() {
    Solution s;
    int res = s.longestSubsequence(
//            "111100010000011101001110001111000000001011101111111110111000011111011000010101110100110110001111001001011001010011010000011111101001101000000101101001110110000111101011000101",11713332
//            "00101001", 1

            1000000000
    );
    cout << res << endl;

}